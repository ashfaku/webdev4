{"ast":null,"code":"var _jsxFileName = \"/Users/ripple/Desktop/webdev4frontend/src/components/containers/NewCampusContainer.js\",\n  _s = $RefreshSig$();\nimport NewCampusView from '../views/NewCampusView';\nimport Header from './Header';\nimport { addCampusThunk } from '../../store/thunks';\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCampusContainer = props => {\n  _s();\n  const [redirect, setRedirect] = useState(false);\n  const [redirectID, setRedirectID] = useState(null);\n  // const uploadToDatabase = async (name, address, description) => {\n  //     console.log(\"Uploading?\");\n  //     try {\n  //         const response = await fetch(\"http://localhost:3001/api/campuses\", {\n  //             method: \"POST\",\n  //             headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify({\n  //                 name,\n  //                 address,\n  //                 description,\n  //             }),\n  //         });\n  //         const responseData = await response.json();\n  //         console.log(\"Response from backend:\", responseData);\n  //     } \n  //     catch (error) {\n  //         console.error(\"Error sending data:\", error);\n  //     };\n  // }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(event.target);\n    const formData = new FormData(event.target);\n    const data = Object.fromEntries(formData.entries());\n    const address = data.buildingnum + \" \" + data.street + \", \" + data.city + \", \" + data.usState + \", \" + data.zipcode;\n    const description = data.description;\n    const name = data.name;\n    const image_url = data.image_url;\n    // console.log(name, address, description);\n    // uploadToDatabase(name, address, description);\n    let newCampus = await props.addCampus({\n      name: name,\n      address: address,\n      description: description,\n      image_url: image_url\n    });\n    // console.log(\"----------\");\n    // console.log(newCampus);\n    // console.log(\"----------\");\n    setRedirectID(newCampus.id);\n    setRedirect(true);\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/campus/${redirectID}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n_s(NewCampusContainer, \"ldH0ptxDft02xhbcqMqPWKErTCA=\");\n_c = NewCampusContainer;\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\nexport default connect(null, mapDispatch)(NewCampusContainer);\nvar _c;\n$RefreshReg$(_c, \"NewCampusContainer\");","map":{"version":3,"names":["NewCampusView","Header","addCampusThunk","connect","React","useState","Redirect","jsxDEV","_jsxDEV","NewCampusContainer","props","_s","redirect","setRedirect","redirectID","setRedirectID","handleSubmit","event","preventDefault","console","log","target","formData","FormData","data","Object","fromEntries","entries","address","buildingnum","street","city","usState","zipcode","description","name","image_url","newCampus","addCampus","id","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","mapDispatch","dispatch","campus","$RefreshReg$"],"sources":["/Users/ripple/Desktop/webdev4frontend/src/components/containers/NewCampusContainer.js"],"sourcesContent":["import NewCampusView from '../views/NewCampusView';\nimport Header from './Header';\n\nimport { addCampusThunk } from '../../store/thunks';\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewCampusContainer = (props) => {\n    const [redirect, setRedirect] = useState(false);\n    const [redirectID, setRedirectID] = useState(null);\n    // const uploadToDatabase = async (name, address, description) => {\n    //     console.log(\"Uploading?\");\n    //     try {\n    //         const response = await fetch(\"http://localhost:3001/api/campuses\", {\n    //             method: \"POST\",\n    //             headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             },\n    //             body: JSON.stringify({\n    //                 name,\n    //                 address,\n    //                 description,\n    //             }),\n    //         });\n    //         const responseData = await response.json();\n    //         console.log(\"Response from backend:\", responseData);\n    //     } \n    //     catch (error) {\n    //         console.error(\"Error sending data:\", error);\n    //     };\n    // }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault(); \n        console.log(event.target);\n        const formData = new FormData(event.target);\n\n        const data = Object.fromEntries(formData.entries());\n        const address = data.buildingnum + \" \" + data.street + \", \" + data.city + \", \" + data.usState + \", \" + data.zipcode;\n        const description = data.description;\n        const name = data.name;\n        const image_url = data.image_url;\n        // console.log(name, address, description);\n        // uploadToDatabase(name, address, description);\n        let newCampus = await props.addCampus({\n            name: name,\n            address: address,\n            description: description,\n            image_url: image_url\n        });\n        // console.log(\"----------\");\n        // console.log(newCampus);\n        // console.log(\"----------\");\n        setRedirectID(newCampus.id);\n        setRedirect(true);\n        \n    }\n    if (redirect) {\n        return <Redirect to={`/campus/${redirectID}`} />\n    }\n    return <div>\n        <Header />\n        <NewCampusView handleSubmit={handleSubmit} />\n    </div>\n}\n\nconst mapDispatch = (dispatch) => {\n    return({\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\n    })\n}\n\nexport default connect(null, mapDispatch)(NewCampusContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}