{"ast":null,"code":"var _jsxFileName = \"/Users/ripple/Desktop/webdev4/client/src/components/views/CampusView.js\",\n  _s = $RefreshSig$();\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { editStudentThunk } from \"../../store/thunks\";\nimport \"../../App.css\";\n\n// Take in props data to construct the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  _s();\n  const {\n    campus\n  } = props;\n  let [deleted, Delete] = useState(false);\n  const unenrollStudent = async student => {\n    console.log(\"Unenrolling?\");\n    await props.editstudent({\n      firstname: student.firstname,\n      lastname: student.lastname,\n      campusId: null,\n      email: student.email,\n      image_url: student.image_url,\n      gpa: student.gpa\n    });\n    // try {\n    //     const response = await fetch(`http://localhost:3001/api/students/${student.id}`, {\n    //         method: \"PUT\",\n    //         headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         },\n    //         body: JSON.stringify({\n    //             firstname: student.firstname,\n    //             lastname: student.lastname,\n    //             campusId: null,\n    //             email: student.email,\n    //             image_url: student.image_url,\n    //             gpa: student.gpa\n    //         }),\n    //     });\n    //     const responseData = await response.json();\n    //     console.log(\"Response from backend:\", responseData);\n    // } \n    // catch (error) {\n    //     console.error(\"Error sending data:\", error);\n    // };\n  };\n  const deleteCampus = async () => {\n    console.log(\"Attempting to delete\");\n    try {\n      const response = await fetch(`http://localhost:3001/api/campuses/${campus.id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        console.log(\"Campus deleted successfully!\");\n        Delete(true);\n      } else {\n        const error = await response.json();\n        console.error(\"Delete failed:\", error);\n      }\n    } catch (err) {\n      console.error(\"Error deleting campus:\", err);\n    }\n  };\n  if (deleted) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/campuses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"campusviewbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://images.unsplash.com/photo-1503676260728-1c00da094a0b\",\n        alt: \"College Campus\",\n        width: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", campus.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", campus.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Image URL: \", campus.image_url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/editcampus/${campus.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"editcampus\",\n            children: \"Edit Campus Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"deletecampus\",\n          onClick: () => deleteCampus(),\n          children: \"Delete Campus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Students: \", campus.students.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), campus.students.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"There are no students.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"campusstudentlisttable\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), campus.students.map(student => {\n            let name = student.firstname + \" \" + student.lastname;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tablecell\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tablecell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => unenrollStudent(student),\n                  children: \"Unenroll\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, student.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/newstudent\",\n        state: {\n          id: campus.id\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"enrollnewstudent\",\n          children: \"Enroll New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CampusView, \"jPWA2763u/z4rcCoYlesDFs9UeY=\");\n_c = CampusView;\nconst mapDispatch = dispatch => {\n  return {\n    editstudent: student => dispatch(editStudentThunk(student))\n  };\n};\nexport default connect(null, mapDispatch)(CampusView);\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["useState","Link","Redirect","editStudentThunk","jsxDEV","_jsxDEV","CampusView","props","_s","campus","deleted","Delete","unenrollStudent","student","console","log","editstudent","firstname","lastname","campusId","email","image_url","gpa","deleteCampus","response","fetch","id","method","ok","error","json","err","to","fileName","_jsxFileName","lineNumber","columnNumber","children","name","className","src","alt","width","address","description","onClick","students","length","map","state","_c","mapDispatch","dispatch","connect","$RefreshReg$"],"sources":["/Users/ripple/Desktop/webdev4/client/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { editStudentThunk } from \"../../store/thunks\";\nimport \"../../App.css\"\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const {campus} = props;\n  let [deleted, Delete] = useState(false);\n  const unenrollStudent = async (student) => {\n    console.log(\"Unenrolling?\");\n    await props.editstudent({\n      firstname: student.firstname,\n      lastname: student.lastname,\n      campusId: null,\n      email: student.email,\n      image_url: student.image_url,\n      gpa: student.gpa\n    });\n    // try {\n    //     const response = await fetch(`http://localhost:3001/api/students/${student.id}`, {\n    //         method: \"PUT\",\n    //         headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         },\n    //         body: JSON.stringify({\n    //             firstname: student.firstname,\n    //             lastname: student.lastname,\n    //             campusId: null,\n    //             email: student.email,\n    //             image_url: student.image_url,\n    //             gpa: student.gpa\n    //         }),\n    //     });\n    //     const responseData = await response.json();\n    //     console.log(\"Response from backend:\", responseData);\n    // } \n    // catch (error) {\n    //     console.error(\"Error sending data:\", error);\n    // };\n  }\n  const deleteCampus = async () => {\n    console.log(\"Attempting to delete\");\n    try {\n      const response = await fetch(`http://localhost:3001/api/campuses/${campus.id}`, {\n        method: \"DELETE\",\n      });\n  \n      if (response.ok) {\n        console.log(\"Campus deleted successfully!\");\n        Delete(true);\n      } \n      else {\n        const error = await response.json();\n        console.error(\"Delete failed:\", error);\n      }\n    } \n    catch (err) {\n      console.error(\"Error deleting campus:\", err);\n    }\n  };\n  if (deleted) {\n    return <Redirect to = {\"/campuses\"} />;\n  }\n  return (\n    <div>\n      <h1>{campus.name}</h1>\n      <div className = \"campusviewbox\">  \n        <img src=\"https://images.unsplash.com/photo-1503676260728-1c00da094a0b\" alt=\"College Campus\" width=\"50%\"></img>\n\n        <p>Address: {campus.address}</p>\n        <p>Description: {campus.description}</p>\n        <p>Image URL: {campus.image_url}</p>\n        <div>\n          <Link to={`/editcampus/${campus.id}`}>\n            <button id = \"editcampus\">Edit Campus Information</button>\n          </Link>\n          <button id = \"deletecampus\" onClick={() => deleteCampus()}>Delete Campus</button>\n        </div>\n        <h2>Total Students: {campus.students.length}</h2>\n        {campus.students.length === 0 ?\n          <div>There are no students.</div> \n          : \n          <div>\n            <table id = \"campusstudentlisttable\">\n            <tr>\n              <th>Student Name</th>\n              <th></th>\n            </tr>\n            {campus.students.map( student => {\n              let name = student.firstname + \" \" + student.lastname;\n              return (\n                <tr key = {student.id}>\n                  <th className = \"tablecell\">{name}</th>\n                  <th className = \"tablecell\"><button onClick={() => unenrollStudent(student)}>Unenroll</button></th>\n                </tr>\n              );\n            })}\n            </table>\n          </div>\n        }\n        <Link to = {\"/newstudent\"} state={{ id: campus.id}}>\n         <button id = \"enrollnewstudent\">Enroll New Student</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n      editstudent: (student) => dispatch(editStudentThunk(student)),\n  };\n};\n\nexport default connect(null, mapDispatch)(CampusView);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}