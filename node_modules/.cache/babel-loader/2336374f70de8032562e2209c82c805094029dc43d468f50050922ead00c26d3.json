{"ast":null,"code":"var _jsxFileName = \"/Users/ripple/Desktop/webdev4/client/src/components/containers/EnrollStudentContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EnrollStudentView from '../views/EnrollStudentView';\nimport { addStudentThunk } from '../../store/thunks';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnrollStudentContainer = props => {\n  _s();\n  // Initialize state\n  console.log(\"Props\", props);\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [campusId, setCampusId] = useState(null);\n  const [email, setEmail] = useState('');\n  const [image_url, setImageUrl] = useState('');\n  const [gpa, setGpa] = useState(0.0);\n  const [redirect, setRedirect] = useState(false);\n  const [redirectId, setRedirectId] = useState(null);\n\n  // Get campusId from location state\n  const location = useLocation();\n  const campusIDToFillIn = location.state.id;\n  useEffect(() => {\n    if (campusIDToFillIn) {\n      setCampusId(campusIDToFillIn);\n    }\n  }, [campusIDToFillIn]);\n  const dispatch = useDispatch();\n\n  // Handle form input change\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case 'firstname':\n        setFirstname(value);\n        break;\n      case 'lastname':\n        setLastname(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'image_url':\n        setImageUrl(value);\n        break;\n      case 'gpa':\n        setGpa(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent page reload on submit\n\n    const student = {\n      firstname,\n      lastname,\n      campusId,\n      email,\n      image_url,\n      gpa\n    };\n\n    // Dispatch action to add the student via the Redux Thunk\n    const newStudent = await dispatch(addStudentThunk(student));\n    if (newStudent) {\n      // Update state for redirect after successful addition\n      setRedirect(true);\n      setRedirectId(newStudent.id);\n    }\n  };\n\n  // Redirect to the new student's page\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/student/${redirectId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EnrollStudentView, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      image_url: image_url,\n      gpa: gpa,\n      campusId: campusId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(EnrollStudentContainer, \"kaClhX7nRS2D6m73KA5nnHiXngo=\", false, function () {\n  return [useLocation, useDispatch];\n});\n_c = EnrollStudentContainer;\nexport default EnrollStudentContainer;\nvar _c;\n$RefreshReg$(_c, \"EnrollStudentContainer\");","map":{"version":3,"names":["React","useState","useEffect","Header","useDispatch","Redirect","EnrollStudentView","addStudentThunk","useLocation","jsxDEV","_jsxDEV","EnrollStudentContainer","props","_s","console","log","firstname","setFirstname","lastname","setLastname","campusId","setCampusId","email","setEmail","image_url","setImageUrl","gpa","setGpa","redirect","setRedirect","redirectId","setRedirectId","location","campusIDToFillIn","state","id","dispatch","handleChange","event","name","value","target","handleSubmit","preventDefault","student","newStudent","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/ripple/Desktop/webdev4/client/src/components/containers/EnrollStudentContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EnrollStudentView from '../views/EnrollStudentView';\nimport { addStudentThunk } from '../../store/thunks';\nimport { useLocation } from 'react-router-dom';\n\nconst EnrollStudentContainer = (props) => {\n  // Initialize state\n  console.log(\"Props\", props);\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [campusId, setCampusId] = useState(null);\n  const [email, setEmail] = useState('');\n  const [image_url, setImageUrl] = useState('');\n  const [gpa, setGpa] = useState(0.0);\n  const [redirect, setRedirect] = useState(false);\n  const [redirectId, setRedirectId] = useState(null);\n\n  // Get campusId from location state\n  const location = useLocation();\n  const campusIDToFillIn = location.state.id;\n\n  useEffect(() => {\n    if (campusIDToFillIn) {\n      setCampusId(campusIDToFillIn);\n    }\n  }, [campusIDToFillIn]);\n\n  const dispatch = useDispatch();\n\n  // Handle form input change\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'firstname':\n        setFirstname(value);\n        break;\n      case 'lastname':\n        setLastname(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'image_url':\n        setImageUrl(value);\n        break;\n      case 'gpa':\n        setGpa(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault();  // Prevent page reload on submit\n\n    const student = {\n      firstname,\n      lastname,\n      campusId,\n      email,\n      image_url,\n      gpa,\n    };\n\n    // Dispatch action to add the student via the Redux Thunk\n    const newStudent = await dispatch(addStudentThunk(student));\n\n    if (newStudent) {\n      // Update state for redirect after successful addition\n      setRedirect(true);\n      setRedirectId(newStudent.id);\n    }\n  };\n\n  // Redirect to the new student's page\n  if (redirect) {\n    return <Redirect to={`/student/${redirectId}`} />;\n  }\n\n  return (\n    <div>\n      <Header />\n      <EnrollStudentView \n        handleChange={handleChange} \n        handleSubmit={handleSubmit}\n        firstname={firstname}\n        lastname={lastname}\n        email={email}\n        image_url={image_url}\n        gpa={gpa}\n        campusId={campusId}\n      />\n    </div>\n  );\n};\n\nexport default EnrollStudentContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}