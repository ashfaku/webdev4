{"ast":null,"code":"var _jsxFileName = \"/Users/ripple/Desktop/webdev4/client/src/components/containers/NewCampusContainer.js\",\n  _s = $RefreshSig$();\nimport NewCampusView from '../views/NewCampusView';\nimport Header from './Header';\nimport { addCampusThunk } from '../../store/thunks';\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCampusContainer = props => {\n  _s();\n  const [redirect, setRedirect] = useState(false);\n  const [redirectID, setRedirectID] = useState(null);\n  const uploadToDatabase = async (name, address, description) => {\n    console.log(\"Uploading?\");\n    try {\n      const response = await fetch(\"http://localhost:3001/api/campuses\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          address,\n          description\n        })\n      });\n      const responseData = await response.json();\n      console.log(\"Response from backend:\", responseData);\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n    ;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(event.target);\n    const formData = new FormData(event.target);\n    const data = Object.fromEntries(formData.entries());\n    const address = data.buildingnum + \" \" + data.street + \", \" + data.city + \", \" + data.usState + \", \" + data.zipcode;\n    const description = data.description;\n    const name = data.name;\n    console.log(name, address, description);\n    // uploadToDatabase(name, address, description);\n    let newCampus = await props.addCampus({\n      name: name,\n      address: address,\n      description: description\n    });\n    // console.log(\"----------\");\n    // console.log(newCampus);\n    // console.log(\"----------\");\n    setRedirectID(newCampus.id);\n    setRedirect(true);\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/campus/${redirectID}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n_s(NewCampusContainer, \"ldH0ptxDft02xhbcqMqPWKErTCA=\");\n_c = NewCampusContainer;\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\nexport default connect(null, mapDispatch)(NewCampusContainer);\nvar _c;\n$RefreshReg$(_c, \"NewCampusContainer\");","map":{"version":3,"names":["NewCampusView","Header","addCampusThunk","connect","React","useState","Redirect","jsxDEV","_jsxDEV","NewCampusContainer","props","_s","redirect","setRedirect","redirectID","setRedirectID","uploadToDatabase","name","address","description","console","log","response","fetch","method","headers","body","JSON","stringify","responseData","json","error","handleSubmit","event","preventDefault","target","formData","FormData","data","Object","fromEntries","entries","buildingnum","street","city","usState","zipcode","newCampus","addCampus","id","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","mapDispatch","dispatch","campus","$RefreshReg$"],"sources":["/Users/ripple/Desktop/webdev4/client/src/components/containers/NewCampusContainer.js"],"sourcesContent":["import NewCampusView from '../views/NewCampusView';\nimport Header from './Header';\n\nimport { addCampusThunk } from '../../store/thunks';\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst NewCampusContainer = (props) => {\n    const [redirect, setRedirect] = useState(false);\n    const [redirectID, setRedirectID] = useState(null);\n    const uploadToDatabase = async (name, address, description) => {\n        console.log(\"Uploading?\");\n        try {\n            const response = await fetch(\"http://localhost:3001/api/campuses\", {\n                method: \"POST\",\n                headers: {\n                \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    name,\n                    address,\n                    description,\n                }),\n            });\n            const responseData = await response.json();\n            console.log(\"Response from backend:\", responseData);\n        } \n        catch (error) {\n            console.error(\"Error sending data:\", error);\n        };\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault(); \n        console.log(event.target);\n        const formData = new FormData(event.target);\n\n        const data = Object.fromEntries(formData.entries());\n        const address = data.buildingnum + \" \" + data.street + \", \" + data.city + \", \" + data.usState + \", \" + data.zipcode;\n        const description = data.description;\n        const name = data.name;\n        console.log(name, address, description);\n        // uploadToDatabase(name, address, description);\n        let newCampus = await props.addCampus({\n            name: name,\n            address: address,\n            description: description\n        });\n        // console.log(\"----------\");\n        // console.log(newCampus);\n        // console.log(\"----------\");\n        setRedirectID(newCampus.id);\n        setRedirect(true);\n        \n    }\n    if (redirect) {\n        return <Redirect to={`/campus/${redirectID}`} />\n    }\n    return <div>\n        <Header />\n        <NewCampusView handleSubmit={handleSubmit} />\n    </div>\n}\n\nconst mapDispatch = (dispatch) => {\n    return({\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\n    })\n}\n\nexport default connect(null, mapDispatch)(NewCampusContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}